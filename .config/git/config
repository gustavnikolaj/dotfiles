[user]
    email = gustavnikolaj@gmail.com
    name = Gustav Nikolaj

# the included files will be ignored silently if they do not exist.
[include]
    path=~/work-dotfiles/.gitconfig

[alias]
    # View the current working tree status using the short format
    s = status -s
    # Diff
    # d = diff --patch-with-stat
    # cdiff = diff --cached --patch-with-stat
    # cd = diff --cached --patch-with-stat
    # commit
    # ci = commit
    # commit with message
    # cm = commit -m
    # checkout
    # co = checkout
    # Show verbose output about tags, branches or remotes
    # tags = tag -l
    # branches = branch -a
    # remotes = remote -v
    # pretty history
    hist = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
    # amend = commit --amend
    # amendf = commit --amend --no-edit

[pull]
    # Only pull branches that have been set up to track a remote branch.
    # default = current
    # Why You Should Use git pull â€“ff-only
    # https://blog.sffc.xyz/post/185195398930/why-you-should-use-git-pull-ff-only-git-is-a
    # ff = only
[push]
    # Only push branches that have been set up to track a remote branch.
    # default = simple

[core]
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
    #whitespace = space-before-tab,indent-with-non-tab,trailing-space

#[color "branch"]
#    current = yellow reverse
#    local = yellow
#    remote = green
#[color "diff"]
#    meta = yellow bold
#    frag = magenta bold
#    old = red bold
#    new = green bold
#[color "status"]
#    added = yellow
#    changed = green
#    untracked = cyan
#[merge]
#    # Include summaries of merged commits in newly created merge commit messages
#    log = true

# Use `origin` as the default remote on the `master` branch in all cases
#[branch "master"]
#    remote = origin
#    merge = refs/heads/master

#[credential]
#	helper = cache
#
#[fetch]
#    prune = true
#[init]
#	defaultBranch = master
